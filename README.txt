beepcore-java 0.9 release
---------------------

This release includes an implementation of beep core RFC 3080 and beep
mapping for TCP RFC 3081.

JDK Version notes
-----------------

beepcore-java supports Java 2 Standard Edition (J2SE) v1.2.x or
higher. The main reason for this is the use of the collections
classes.

Requirements
------------

The core package of the library is requires a XML parser that supports
the javax.xml.parsers, org.w3c.dom, and org.xml.sax interfaces. Xerces
is the library we use for most of our work but it has been tested with
others.

The profile TLS package requires the JSSE library.

The EDU.oswego.cs.dl.util.concurrent package, a build can be obtained 
from https://github.com/downloads/jalop-tresys/beepcore-java/concurrent.jar

Apache commons logging, available at http://commons.apache.org/logging/
At the time of writing, beepcore-java was working 1.1.1.

To run the tests, you will junit, available at http://www.junit.org/
At the time of writing, beepcore-java was working using junit 4.10.

Build
-----

To build the library we are using ANT (http://jakarta.apache.org/ant/)
with the build.xml file in the root of the tree. The build.xml file is
lacking all of the dependencies, these will be added in the near
future.

You will need to provide a build.properties file to specify where various
libraries are located. A sample is provided (build.properties.sample).
The required keys are:
junit_jar         # The path to the junit jar, only needed if you are running the tests
cl_apis_jar       # The path to the Apache Commons Logging APIS jar
cl_jar            # The path to the Apache Commons Logging jar
cl_adapters_jar   # The path to the Apache Commons Logging adapters jar
xerces_root       # The path to where you've extracted the xerces release

Known Issues
------------

The TCL version and the Java version have an incompatibility.  The
temporary work around is to import the certifcate generated by
etc/makeCert (in the TCL library) into your Java certificate store
cacerts.  This is possible using keytool to import the server.pem file
from the TCL library.  See the keytool documentation for instructions
on how to import a certifcate.  The server.pem file is an X.509 format
certificate.

