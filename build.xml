<project name="beepcore" default="core-jar" basedir=".">
    <property name="name" value="beepcore" />
    <property name="Name" value="BEEP Core" />
    <property name="version" value="0.9.0" />
    <property name="release.name" value="${name}-${version}" />

    <property name="beepcore.home" value="."/>
    <property name="build.dir" value="build" />
    <property name="release.dir" value="${build.dir}/${release.name}" />

    <property name="core.build.dir" value="${build.dir}/core" />
    <property name="core.doc.dir" value="${release.dir}/doc/core" />
    <property name="core.jar.name" value="${release.name}.jar" />
    <property name="core.src.dir" value="src" />
    <property name="core.packages" value="org.beepcore.beep.core,org.beepcore.beep.util,org.beepcore.beep.transport.tcp,org.beepcore.beep.lib,org.beepcore.beep.profile,org.beepcore.beep.profile.echo"/>

    <property name="example.build.dir" value="${build.dir}/example" />
    <property name="example.src.dir" value="example" />

    <property name="test.build.dir"  value="${build.dir}/test" />
    <property name="test.src.dir"  value="test" />

    <property name="sasl.build.dir" value="${build.dir}/sasl"/>
    <property name="sasl.doc.dir" value="${release.dir}/doc/sasl"/>
    <property name="sasl.jar.name" value="beepsasl-${version}.jar"/>
    <property name="sasl.packages" value="org.beepcore.beep.profile.sasl.*"/>
    <property name="sasl.src.dir" value="src"/>

    <property name="tls.build.dir" value="${build.dir}/tls" />
    <property name="tls.doc.dir" value="${release.dir}/doc/tls" />
    <property name="tls.jar.name" value="beeptls-${version}.jar" />
    <property name="tls.src.dir" value="src" />

    <target name="init">
        <mkdir dir="${core.build.dir}" />
    </target>

    <target name="core" depends="init">
        <mkdir dir="${core.build.dir}"/>
        <javac srcdir="${core.src.dir}/" destdir="${core.build.dir}" >
            <include name="**/core/*.java"/>
            <include name="**/lib/*.java"/>
            <include name="**/profile/*.java"/>
            <include name="**/profile/echo/*.java"/>
            <include name="**/transport/**/*.java"/>
            <include name="**/util/*.java"/>
        </javac>
    </target>

    <target name="core-jar" depends="core">
        <mkdir dir="${release.dir}/lib"/>
        <jar jarfile="${release.dir}/lib/${core.jar.name}"
	     basedir="${core.build.dir}">
	    <include name="**/*.class"/>
	</jar>
    </target>

    <target name="core-doc" depends="core-jar" description="Creates the API documentation for Core">
        <mkdir dir="${core.doc.dir}"/>
	<javadoc packagenames="${core.packages}"
                 sourcepath="${core.src.dir}/"
	         destdir="${core.doc.dir}"
		 author="false"
		 version="false"
		 overview="${core.src.dir}/overview.html"
		 windowtitle="${Name} API"
		 doctitle="${Name}"
		 bottom="Copyright &#169; 2001 Invisible Worlds, Inc. All Rights Reserved.">
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
            </classpath>
        </javadoc>
    </target>

    <target name="core-dist" depends="core-doc">
        <mkdir dir="${release.dir}/src"/>

        <copy todir="${release.dir}/src">
            <fileset dir="${core.src.dir}"/>
        </copy>
	<copy file="LICENSE.txt" tofile="${release.dir}/LICENSE.txt"/>
	<copy file="README.txt" tofile="${release.dir}/README.txt"/>
	<copy file="README_SASL.htm" tofile="${release.dir}/README_SASL.htm"/>
    </target>

    <target name="example" depends="core-jar,sasl-jar,tls-jar">
        <mkdir dir="${example.build.dir}"/>
        <javac srcdir="${example.src.dir}/" destdir="${example.build.dir}" >
            <include name="**/*.java"/>
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${sasl.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${tls.jar.name}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="example">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}/" destdir="${test.build.dir}" >
            <include name="**/*.java"/>
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${sasl.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${tls.jar.name}"/>
		 <pathelement location="${example.build.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="sasl" depends="core">
        <mkdir dir="${sasl.build.dir}"/>
        <javac srcdir="${sasl.src.dir}/" destdir="${sasl.build.dir}" >
            <include name="**/sasl/**/*.java"/>
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
            </classpath>
        </javac>
    </target>

    <target name="sasl-jar" depends="sasl">
        <mkdir dir="${release.dir}/lib"/>
        <jar jarfile="${release.dir}/lib/${sasl.jar.name}"
	     basedir="${sasl.build.dir}">
	    <include name="**"/>
	</jar>
    </target>

    <target name="sasl-doc" depends="sasl-jar">
        <mkdir dir="${sasl.doc.dir}"/>
	<javadoc packagenames="${sasl.packages}"
                 sourcepath="${sasl.src.dir}/"
	         destdir="${sasl.doc.dir}"
		 author="false"
		 version="false"
		 windowtitle="SASL Profile API"
		 doctitle="SASL Profile"
		 bottom="Copyright &#169; 2001 Invisible Worlds, Inc. All Rights Reserved.">
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${sasl.jar.name}"/>
            </classpath>
        </javadoc>
    </target>

    <target name="tls" depends="core">
        <mkdir dir="${tls.build.dir}"/>
        <javac srcdir="${tls.src.dir}/" destdir="${tls.build.dir}" >
            <include name="**/tls/*.java"/>
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
            </classpath>
        </javac>
    </target>

    <target name="tls-jar" depends="tls">
        <mkdir dir="${release.dir}/lib"/>
        <jar jarfile="${release.dir}/lib/${tls.jar.name}"
	     basedir="${tls.build.dir}">
	    <include name="**"/>
	</jar>
    </target>

    <target name="tls-doc" depends="tls-jar">
        <mkdir dir="${tls.doc.dir}"/>
	<javadoc packagenames="org.beepcore.beep.profile.tls"
                 sourcepath="${tls.src.dir}/"
	         destdir="${tls.doc.dir}"
		 author="false"
		 version="false"
		 windowtitle="TLS Profile API"
		 doctitle="TLS Profile"
		 bottom="Copyright &#169; 2001 Invisible Worlds, Inc. All Rights Reserved.">
	    <link offline="true" href="http://java.sun.com/products/jdk/1.3/docs/api" packagelistLoc="doc/jdk" />
	    <link offline="true" href="http://java.sun.com/products/jsse/doc/apidoc" packagelistLoc="doc/jsse" />
	    <classpath>
		 <pathelement path="${java.class.path}"/>
		 <pathelement location="${release.dir}/lib/${core.jar.name}"/>
		 <pathelement location="${release.dir}/lib/${tls.jar.name}"/>
            </classpath>
        </javadoc>
    </target>

    <target name="doc" depends="core-doc,sasl-doc,tls-doc"/>

    <!-- Packages the distribution with ZIP -->
    <target name="dist-zip" depends="core-dist,doc">
        <zip zipfile="${build.dir}/${release.name}.zip"
	     basedir="${release.dir}/.." includes="${release.name}/**"/>
    </target>

    <!-- Packages the distribution with TAR-GZIP -->
    <target name="dist-tgz" depends="core-dist,doc">
        <tar tarfile="${build.dir}/${release.name}.tar"
	     basedir="${release.dir}/.." includes="${release.name}/**"/>
        <gzip zipfile="${build.dir}/${release.name}.tgz"
	      src="${build.dir}/${release.name}.tar"/>
	<delete file="${build.dir}/${release.name}.tar"/>
    </target>

    <target name="dist" depends="dist-zip,dist-tgz"/>

    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${doc.dir}" />
    </target>
</project>
